<?php
/**
 * @file
 * Drupal site-specific configuration file.
 */

/**
 * Access control for update.php script.
 *
 * If you are updating your Drupal installation using the update.php script but
 * are not logged in using either an account with the "Administer software
 * updates" permission or the site maintenance account (the account that was
 * created during installation), you will need to modify the access check
 * statement below. Change the FALSE to a TRUE to disable the access check.
 * After finishing the upgrade, be sure to open this file again and change the
 * TRUE back to a FALSE!
 */
 $update_free_access = FALSE;

/**
 * Some distributions of Linux (most notably Debian) ship their PHP
 * installations with garbage collection (gc) disabled. Since Drupal depends on
 * PHP's garbage collection for clearing sessions, ensure that garbage
 * collection occurs by using the most common settings.
 */
ini_set('session.gc_probability', 1);
ini_set('session.gc_divisor', 100);

/**
 * Set session lifetime (in seconds), i.e. the time from the user's last visit
 * to the active session may be deleted by the session garbage collector. When
 * a session is deleted, authenticated users are logged out, and the contents
 * of the user's $_SESSION variable is discarded.
 */
ini_set('session.gc_maxlifetime', 200000);

/**
 * Set session cookie lifetime (in seconds), i.e. the time from the session is
 * created to the cookie expires, i.e. when the browser is expected to discard
 * the cookie. The value 0 means "until the browser is closed".
 */
ini_set('session.cookie_lifetime', 2000000);

/**
 * Fast 404 pages:
 *
 * Drupal can generate fully themed 404 pages. However, some of these responses
 * are for images or other resource files that are not displayed to the user.
 * This can waste bandwidth, and also generate server load.
 *
 * The options below return a simple, fast 404 page for URLs matching a
 * specific pattern:
 * - 404_fast_paths_exclude: A regular expression to match paths to exclude,
 *   such as images generated by image styles, or dynamically-resized images.
 *   The default pattern provided below also excludes the private file system.
 *   If you need to add more paths, you can add '|path' to the expression.
 * - 404_fast_paths: A regular expression to match paths that should return a
 *   simple 404 page, rather than the fully themed 404 page. If you don't have
 *   any aliases ending in htm or html you can add '|s?html?' to the expression.
 * - 404_fast_html: The html to return for simple 404 pages.
 *
 * Add leading hash signs if you would like to disable this functionality.
 */
$conf['404_fast_paths_exclude'] = '/\/(?:styles)|(?:system\/files)\/|(?:sitemap.txt)|(?:robots.txt)/';
$conf['404_fast_paths'] = '/\.(?:txt|png|gif|jpe?g|css|js|ico|swf|flv|cgi|bat|pl|dll|exe|asp)$/i';
$conf['404_fast_html'] = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>404 Not Found</title></head><body><h1>Not Found</h1><p>The requested URL "@path" was not found on this server.</p></body></html>';

/**
 * By default the page request process will return a fast 404 page for missing
 * files if they match the regular expression set in '404_fast_paths' and not
 * '404_fast_paths_exclude' above. 404 errors will simultaneously be logged in
 * the Drupal system log.
 *
 * You can choose to return a fast 404 page earlier for missing pages (as soon
 * as settings.php is loaded) by uncommenting the line below. This speeds up
 * server response time when loading 404 error pages and prevents the 404 error
 * from being logged in the Drupal system log. In order to prevent valid pages
 * such as image styles and other generated content that may match the
 * '404_fast_paths' regular expression from returning 404 errors, it is
 * necessary to add them to the '404_fast_paths_exclude' regular expression
 * above. Make sure that you understand the effects of this feature before
 * uncommenting the line below.
 */
drupal_fast_404();

/**
 * Redirect to HTTPS:
 *
 * Require HTTPS across all Pantheon environments.
 * Check if Drupal or WordPress is running via command line.
 */
if (isset($_SERVER['PANTHEON_ENVIRONMENT']) && ($_SERVER['HTTPS'] === 'OFF') && (php_sapi_name() != "cli")) {
  if (!isset($_SERVER['HTTP_USER_AGENT_HTTPS']) || (isset($_SERVER['HTTP_USER_AGENT_HTTPS']) && $_SERVER['HTTP_USER_AGENT_HTTPS'] != 'ON')) {
    // Send redirect
    header('HTTP/1.0 301 Moved Permanently');
    header('Location: https://'. $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']);
    // Name transaction "redirect" in New Relic for improved reporting (optional).
    if (extension_loaded('newrelic')) {
      newrelic_name_transaction("redirect");
    }
    exit();
  }
}

/**
 * Reverse proxy configuration:
 */
if (isset($_SERVER['REMOTE_ADDR']) && ($_SERVER['REMOTE_ADDR'] === '131.104.92.23')) {
  // Domain masking:
  // Some sites on Pantheon share a common domain name (e.g. www.uoguelph.ca). Pantheon
  // refers to this as 'domain masking' and it is not officially supported. These sites
  // are forwarded through an Apache reverse proxy server. The original domain name of
  // the site is translated to the Pantheon platform URL. On the Pantheon side, Drupal
  // must be tricked into thinking it is running under the primary domain name from a
  // subdirectory. The general case is to rewrite the request URL to:
  // www.uoguelph.ca/{sitename}, but there are exceptions.

  // Domain masking is only required if the request comes from the proxy server and
  // the HTTP host matches the Pantheon platform URL.
  if ($_SERVER["HTTP_HOST"] === $_ENV['PANTHEON_ENVIRONMENT'] . '-' . $_ENV['PANTHEON_SITE_NAME'] . '.pantheon.io') {

    // Some sites use a primary domain other than www.uoguelph.ca
    $proxy_domain = array(
	  'a11yportal' => 'wellness.uoguelph.ca',
	  'cecs' => 'www.recruitguelph.ca',
	  'counselling' => 'wellness.uoguelph.ca',
	  'graduatestudies' => 'graduatestudies.uoguelph.ca',
	  'healthservices' => 'wellness.uoguelph.ca',
	  'hpc1' => 'wellness.uoguelph.ca',
	  'sas1' => 'wellness.uoguelph.ca',
	  'sws' => 'wellness.uoguelph.ca',
	  'wellnesseducation' => 'wellness.uoguelph.ca',
    );

	// Generally the proxy path will match the site name, but in some cases they differ
	$proxy_path = array(
	  'a11yportal' => '/accessibility/portal',
	  'accessibilityweb' => '/accessibility/web',
	  'ahl1' => '/ahl',
	  'alliance1' => '/alliance',
	  'bioinformatics1' => '/bioinformatics',
	  'business2' => '/lang',
	  'cbspurchasing' => '/cbs/purchasing',
	  'ccsforms' => '/ccs/forms',
	  'cio1' => '/cio',
	  'cip1' => '/cip',
	  'cps1' => '/cps',
	  'dhr1' => '/diversity-human-rights',
	  'dunfield' => '/crc/dunfield',
	  'engineering1' => '/engineering',
	  'finance1' => '/finance',
	  'fire1' => '/fire',
	  'fsadmin' => '/foodscience/fsadmin',
	  'fys' => '/vpacademic/fys',
	  'graduatestudiesforms' => '/graduatestudies/forms2',
	  'gsa1' => '/gsa',
	  'healthservices' => '/health',
	  'hpc1' => '/hpc',
	  'hr1' => '/hr',
	  'ib2' => '/ib',
	  'international1' => '/international',
	  'iqap' => '/vpacademic/iqap',
	  'lvpo' => '/finance/departments-services/purchasing-services/lvpo-forms',
	  'management1' => '/management',
	  'mcs1' => '/mcs',
	  'oac1' => '/oac',
	  'police1' => '/police',
	  'ppp' => '/vpacademic/ppp',
	  'psa1' => '/psa',
	  'psychology1' => '/psychology',
	  'realestate1' => '/realestate',
	  'researchinnovation' => '/research/innovation',
	  'sas1' => '/accessibility',
	  'ses1' => '/ses',
	  'studentaffairs1' => '/studentaffairs',
  	  'sustainability1' => '/sustainability',
	  'psa1' => '/psa',
	  'tutoring1' => '/tutoring',
	  'wellnesseducation' => '/education',
	);    

    // Set default domain
    if (!isset($proxy_domain[$_ENV['PANTHEON_SITE_NAME']])) {
      $proxy_domain[$_ENV['PANTHEON_SITE_NAME']] = 'www.uoguelph.ca';
    }
   
    // Set default base path
    if (!isset($proxy_path[$_ENV['PANTHEON_SITE_NAME']])) {
      $proxy_path[$_ENV['PANTHEON_SITE_NAME']] = '/' . $_ENV['PANTHEON_SITE_NAME'];
    }

    // Rewrite request URI.
    $_SERVER['REQUEST_URI'] = $proxy_path[$_ENV['PANTHEON_SITE_NAME']] . $_SERVER['REQUEST_URI'];

    // Set cookie domain.
    $cookie_domain = '.' . $proxy_domain[$_ENV['PANTHEON_SITE_NAME']];
    $cookie_path = $proxy_path[$_ENV['PANTHEON_SITE_NAME']];

    // Set Drupal base URL.
    $base_url = 'https://' . $proxy_domain[$_ENV['PANTHEON_SITE_NAME']] . $proxy_path[$_ENV['PANTHEON_SITE_NAME']];
  }

  // Single sign-on:
  // Oracle access manager sets the ca-uoguelph-user HTTP header with the user 
  // name of the currently logged in user. The Drupal LDAP SSO module expects
  // to find this value in the REMOTE_USER environment variable.

  // Set the REMOTE_USER variable
  if (isset($_SERVER['HTTP_CA_UOGUELPH_USER'])) {
    $_SERVER['REMOTE_USER'] = $_SERVER['HTTP_CA_UOGUELPH_USER'];
  }
}

/**
 * Reroute email
 *
 * The reroute email module prevents emails from being sent from development and
 * test environments, and can optionally redirect all emails to a specific address.
 */
if (isset($_ENV['PANTHEON_ENVIRONMENT')) {
  // Disable mail rerouting in live environments, enable it otherwise.
  $conf['reroute_email_enable'] = ($_ENV['PANTHEON_ENVIRONMENT'] === 'live' ? 0 : 1);
}

/**
 * Include a local settings file if it exists.
 *
 * Pantheon requires that settings.php be committed to version control.
 * If you are running a site locally using this upstream,
 * move your site configuration to `local.settings.php` and it will be included here.
 * Note that this only applies to the default site, multi-site settings are not affected.
 */
$local_settings = dirname(__FILE__) . '/local.settings.php';
if (file_exists($local_settings)) {
  include $local_settings;
}
