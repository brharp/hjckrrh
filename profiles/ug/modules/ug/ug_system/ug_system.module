<?php
global $base_url;

/**
* Implements hook_menu().
*/
function ug_system_menu() {

  $items['admin/config/system/production-mode'] = array(
    'title' => 'Production mode',
    'description' => 'Put the site in production mode.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ug_system_production_mode'),
    'access arguments' => array('administer site configuration'),
    //'file' => 'ug_system.admin.inc',
    'weight' => -10,
  );

  $items['admin/config/system/add-site'] = array(
    'title' => 'Add site',
    'description' => 'Add site to lumturio and nagios.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ug_system_add_site_form'),
    'access arguments' => array('access content'),
    'weight' => -9,
  );
  return $items;
}

/**
* Form builder; Add the site to nagios and Lumturio
**/
function ug_system_add_site_form(){
  $form['ug_system_add_nagios'] = array(
    '#type' => 'checkbox',
    '#title' => t('Add site to nagios'),
    '#description' => t('Send a ticket to the helpdesk for site to be added to nagios'),
    '#default_value' => variable_get('ug_system_add_nagios', 0),
  );

  $form['ug_system_add_lumturio'] = array(
    '#type' => 'checkbox',
    '#title' => t('Add site to lumturio'),
    '#description' => t('Add site to lumturio'),
    '#default_value' => variable_get('ug_system_add_lumturio', 0),
  );

  $form['ug_system_api_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Enter lumturio api key'),
    '#attributes' =>array('value' => variable_get('ug_system_api_key')),
    '#description' => t('Lumturio api key, can be found on the lumturio dashnoard under settings'),
  );

  $form['ug_system_site_UUID'] = array(
    '#type' => 'textfield',
    '#title' => t('Enter the site UUID'),
    '#description' => t('Enable the sysytem status module, go to <a href="@system_status">System Status</a> to get websiteUUID' , array('@system_status' => url('admin/config/system/system_status'))),
    '#attributes' =>array('value' => variable_get('ug_system_site_UUID')),
    //Make the site UUID a required field if the Lumturio api key is checked
    '#states' => array(
      'required' => array(
        ':input[name="ug_system_add_lumturio"]' => array('checked' => TRUE),
      ),
    ),
  );

  $form = system_settings_form($form);
  $form['#submit'][] = 'ug_system_form_submit_button';
  return $form;
}

/**
* Callback function for ug_system_add_site_form
**/
function ug_system_form_submit_button($form, &$form_state){
  $nagios_submit_checkbox = variable_get('ug_system_add_nagios');
  if($nagios_submit_checkbox == '1' ) {
    $to = '58888help@uoguelph.ca';
    $from = 'wsadmin@uoguelph.ca';
    $message = drupal_mail('ug_system','ug_system_email',$to, language_default(), $from, TRUE); //Sends email
  }

  if (!empty($message['result'])) {
    drupal_set_message(t("Ticket has been submitted"), 'status');
  }
}

/**
* Implements hook_mail().
**/
function ug_system_mail($key, &$message, $params ){
  switch ($key) {
    case 'ug_system_email':
    $message['subject'] = t('Add website to Nagios');
    $message['body'][] = t("Could you please add the site " . $base_url . " to Nagios monitoring");
    $message['body'][] = t('Thank you');
    break;
  }
}

/**
* Implements hook_form_FORM_ID_alter().
**/
function ug_system_form_ug_system_add_site_form_alter(&$form, &$form_state, $form_id) {
  $nagios_checkbox = variable_get('ug_system_add_nagios');
  if($nagios_checkbox == '1'){
    $form['ug_system_add_nagios']['#disabled'] = TRUE;
    $form['ug_system_add_nagios']['#description'] = t("Ticket has been submitted");
  }

  $lumturio_checkbox = variable_get('ug_system_add_lumturio');
  if(($lumturio_checkbox  == '1')){
    $form['ug_system_add_lumturio']['#disabled'] = TRUE;
    $form['ug_system_add_lumturio']['#description'] = t("Site has been added to lumturio");
  }
}

/**
* Connection function,sends a GET request to the lumturio api
*/
function ug_system_lumturio_get($path)
{
  $options = array(
    'headers' => array('X-API-TOKEN' => variable_get('ug_system_api_key'))
  );

  // Retrieve data from Lumturio API
  $response = drupal_http_request('https://app.lumturio.com/api/'.$path, $options);

  // Check the HTTP response code to see if a valid response was received
  if($response->code >= 200 && $response->code < 300)
  {
    // a valid response was received, so we return the data
    $oldStr = $response->data;
    $newStr = substr($oldStr, 8, drupal_strlen($oldStr)-15);
    return drupal_json_decode($newStr);
  }
  // A valid response was not received, so we return FALSE
  return FALSE;
}

/**
* Connection function, sens a POST request to the lumturio api
*/
function ug_system_lumturio_post($path)
{
  //Site url we want to add
  global $base_url;

  //the data we are sending as param1=value1&param2=value2;
  $reqArray = array(
    'site_url' => $base_url,
    'site_uuid' => variable_get('ug_system_site_UUID'),
  );

  //Encode the array, lumturio accepts json only
  $data = drupal_json_encode($reqArray);

  $options = array(
    'method' => 'POST',
    'data' => $data,
    'headers' => array('X-API-TOKEN' => variable_get('ug_system_api_key')),
  );

  // Retrieve data from Lumturio API
  $response = drupal_http_request('https://app.lumturio.com/api/'.$path, $options);

  // Check the HTTP response code to see if a valid response was received
  if($response->code >= 200 && $response->code < 300)
  {
    // a valid response was received, so we return the data
    return drupal_json_decode($response->data);
  }
  // A valid response was not received, so we return FALSE
  return FALSE;
}

/**
* Form builder; Configure the site's production status.
*
* @ingroup forms
* @see system_settings_form()
*/
function ug_system_production_mode() {
  $form['ug_system_production_mode'] = array(
    '#type' => 'checkbox',
    '#title' => t('Put site into production mode'),
    '#default_value' => variable_get('ug_system_production_mode', 0),
    '#description' => t('Enable production mode.'),
  );
  return system_settings_form($form);
}

function ug_system_production_mode_validate($form, &$form_state) {
  require_once(drupal_get_path('module', 'system').'/system.admin.inc');
  if (system_status(TRUE)) {
    form_set_error('status', t('Please resolve system status errors before continuing.'));
  }
}

/**
* Implements hook_preprocess_page().
*/
function ug_system_preprocess_html(&$variables) {
  if (!variable_get('ug_system_production_mode', 0)) {
    $variables['head_title'] = '[DEVELOPMENT] ' . $variables['head_title'];
  }
}
